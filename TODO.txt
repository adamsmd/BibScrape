Flags
  flags for lists
  @url flag instead of $url
  --input where *.IO.f
  --names where *.IO.f
  --nouns where *.IO.f
  %field
  %no-encode
  %no-collapse
  %omit
  %omit-empty

  Case-insensitive nouns?

############
# Options
############
#
# Key: Keep vs generate
#
# Author, Editor: title case, initialize, last-first
# Author, Editor, Affiliation(?): List of renames
# Booktitle, Journal, Publisher*, Series, School, Institution, Location*, Edition*, Organization*, Publisher*, Address*, Language*:
#  List of renames (regex?)
#
# Title
#  Captialization: Initialisms, After colon, list of proper names
#
# ISSN: Print vs Electronic
# Keywords: ';' vs ','

# TODO:
#  author as editors?
#  detect fields that are already de-unicoded (e.g. {H}askell or $p$)
#  follow jstor links to original publisher
#  add abstract to jstor
#  get PDF
#END TODO

# TODO: omit type-regex field-regex (existing entry is in scope)

# Omit:class/type
# Include:class/type
# no issn, no isbn
# title-case after ":"
# Warn if first alpha after ":" is not capitalized
# Flag about whether to Unicode, HTML, or LaTeX encode
# Warning on duplicate names

# TODO:
# ALWAYS_GEN_KEY
#$PREFER_NEW 1 = use new when both new and old have a key
#$ADD_NEW 1 = use new when only new has key
#$REMOVE_OLD 1 = not use old when only new has key

#my %RANGE = map {($_,1)} qw(chapter month number pages volume year);
#my @REQUIRE_FIELDS = (...); # per type (optional regex on value)
#my @RENAME

# TODO:
# preserve key if from bib-tex?
# warn about duplicate author names

# TODO: make debug be verbose and go to STDERR
# TODO: rescrape based on doi

Set bibtex key with {key}url
DOI urls

# TODO: warn if not exists bib_scrape_url

    # TODO: a test that has a jr part
# TODO: test that uses 'others' in author names

# TODO: parse names in Raku instead of Python

# Automate cleaning of Isbn file

# TODO: ignore non-domain files (timeout on file load?)

# ['CONTEXT_CHROME',
#  'CONTEXT_CONTENT',
#  'NATIVE_EVENTS_ALLOWED',
#  '__class__',
#  '__delattr__',
#  '__dict__',
#  '__doc__',
#  '__enter__',
#  '__exit__',
#  '__format__',
#  '__getattribute__',
#  '__hash__',
#  '__init__',
#  '__module__',
#  '__new__',
#  '__reduce__',
#  '__reduce_ex__',
#  '__repr__',
#  '__setattr__',
#  '__sizeof__',
#  '__str__',
#  '__subclasshook__',
#  '__weakref__',
#  '_file_detector',
#  '_is_remote',
#  '_mobile',
#  '_switch_to',
#  '_unwrap_value',
#  '_web_element_cls',
#  '_wrap_value',
#  'add_cookie',
#  'application_cache',
#  'back',
#  'binary',
#  'capabilities',
#  'close',
#  'command_executor',
#  'context',
#  'create_web_element',
#  'current_url',
#  'current_window_handle',
#  'delete_all_cookies',
#  'delete_cookie',
#  'desired_capabilities',
#  'error_handler',
#  'execute',
#  'execute_async_script',
#  'execute_script',
#  'file_detector',
#  'file_detector_context',
#  'find_element',
#  'find_element_by_class_name',
#  'find_element_by_css_selector',
#  'find_element_by_id',
#  'find_element_by_link_text',
#  'find_element_by_name',
#  'find_element_by_partial_link_text',
#  'find_element_by_tag_name',
#  'find_element_by_xpath',
#  'find_elements',
#  'find_elements_by_class_name',
#  'find_elements_by_css_selector',
#  'find_elements_by_id',
#  'find_elements_by_link_text',
#  'find_elements_by_name',
#  'find_elements_by_partial_link_text',
#  'find_elements_by_tag_name',
#  'find_elements_by_xpath',
#  'firefox_profile',
#  'forward',
#  'fullscreen_window',
#  'get',
#  'get_cookie',
#  'get_cookies',
#  'get_log',
#  'get_screenshot_as_base64',
#  'get_screenshot_as_file',
#  'get_screenshot_as_png',
#  'get_window_position',
#  'get_window_rect',
#  'get_window_size',
#  'implicitly_wait',
#  'install_addon',
#  'log_types',
#  'maximize_window',
#  'minimize_window',
#  'mobile',
#  'name',
#  'orientation',
#  'page_source',
#  'profile',
#  'quit',
#  'refresh',
#  'save_screenshot',
#  'service',
#  'session_id',
#  'set_context',
#  'set_page_load_timeout',
#  'set_script_timeout',
#  'set_window_position',
#  'set_window_rect',
#  'set_window_size',
#  'start_client',
#  'start_session',
#  'stop_client',
#  'switch_to',
#  'switch_to_active_element',
#  'switch_to_alert',
#  'switch_to_default_content',
#  'switch_to_frame',
#  'switch_to_window',
#  'title',
#  'uninstall_addon',
#  'w3c',
#  'window_handles']

# Better cleanup of child processes

  #$web-driver.set_page_load_timeout(5);

# Better support for waiting (e.g., await until object in dom)

Better way to put Inline::Python last (phasor?)


    # TODO: https://dblp.org/db/journals/publ/
    # TODO: all ciated by papers in big four
    # TODO: arxiv

  # TODO: remove all 'die' and warn instead
  # TODO: mktemp
Move downloads into own module? (or just a function in Scrape)

# TODO: numeric ranges might misfire if "-" doesn't represent a range, Common for tech report numbers

    # TODO: Keywords: ';' vs ','

    # TODO: Author, Editor, Affiliation: List of renames
# Booktitle, Journal, Publisher*, Series, School, Institution, Location*, Edition*, Organization*, Publisher*, Address*, Language*:

    # TODO: via omit if empty
    update($entry, 'note', { $_ = Nil if $_ eq '' });

    # TODO: Title Capticalization: Initialisms, After colon, list of proper names

Entry key
    # Format: author/editor1.last year title/journal.abbriv
    # TODO: Remove doi?

#     # Force comma or no comma after last field
#     my $str = $entry->print_s();
#     $str ~~ s[(})(\s*}\s*)$][$0,$1] if $self->final_comma;
#     $str ~~ s[(}\s*),(\s*}\s*)$][$0$1] if !$self->final_comma;

purify-string

    # TODO: == vs eq

  has Array[BibTeX::Name] @.names;

Isbn -> ISBN

  # TODO: XPath

EISSN from side pill of ACM

META6.json

use 'is copy' on parameters

Invisible browser (with flag (verbose?) to make visible)

Code coverage

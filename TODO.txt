Flags
  flags for lists
  @url flag instead of $url
  --input where *.IO.f
  --names where *.IO.f
  --nouns where *.IO.f
  %field
  %no-encode
  %no-collapse
  %omit
  %omit-empty

  Case-insensitive nouns?

Key generation:
  keep vs generate
  use first n (non-trivial) words

Capital After colon in title?

follow jstor links to original publisher
add abstract to jstor
get PDF (eprint?)

# Omit:class/type
# Include:class/type
# no issn, no isbn
# title-case after ":"
# Warn if first alpha after ":" is not capitalized
# Flag about whether to Unicode, HTML, or LaTeX encode
# Warning on duplicate names

# TODO:
# ALWAYS_GEN_KEY
#$PREFER_NEW 1 = use new when both new and old have a key
#$ADD_NEW 1 = use new when only new has key
#$REMOVE_OLD 1 = not use old when only new has key

#my %RANGE = map {($_,1)} qw(chapter month number pages volume year);
#my @REQUIRE_FIELDS = (...); # per type (optional regex on value)
#my @RENAME

# TODO:
# preserve key if from bib-tex?
# warn about duplicate author names

# TODO: make debug be verbose and go to STDERR
# TODO: rescrape based on doi

Set bibtex key with {key}url
DOI urls

# TODO: warn if not exists bib_scrape_url

    # TODO: a test that has a jr part
# TODO: test that uses 'others' in author names

# TODO: parse names in Raku instead of Python

# Automate cleaning of Isbn file

# TODO: ignore non-domain files (timeout on file load?)

# Better cleanup of child processes

  #$web-driver.set_page_load_timeout(5);

# Better support for waiting (e.g., await until object in dom)

Better way to put Inline::Python last (phasor?)


    # TODO: https://dblp.org/db/journals/publ/
    # TODO: all ciated by papers in big four
    # TODO: arxiv

  # TODO: remove all 'die' and warn instead
  # TODO: mktemp
Move downloads into own module? (or just a function in Scrape)

# TODO: numeric ranges might misfire if "-" doesn't represent a range, Common for tech report numbers

    # TODO: Keywords: ';' vs ','

    # TODO: Author, Editor, Affiliation: List of renames
# Booktitle, Journal, Publisher*, Series, School, Institution, Location*, Edition*, Organization*, Publisher*, Address*, Language*:

    # TODO: via omit if empty
    update($entry, 'note', { $_ = Nil if $_ eq '' });

    # TODO: Title Capticalization: Initialisms, After colon, list of proper names

Entry key
    # Format: author/editor1.last year title/journal.abbriv
    # TODO: Remove doi?

#     # Force comma or no comma after last field
#     my $str = $entry->print_s();
#     $str ~~ s[(})(\s*}\s*)$][$0,$1] if $self->final_comma;
#     $str ~~ s[(}\s*),(\s*}\s*)$][$0$1] if !$self->final_comma;

purify-string

    # TODO: == vs eq

  has Array[BibTeX::Name] @.names;

Isbn -> ISBN

  # TODO: XPath

EISSN from side pill of ACM

META6.json

use 'is copy' on parameters

Invisible browser (with flag (verbose?) to make visible)

Code coverage

non-multi arrays

load browser as under-window

newx

List => Array[Int]

Make field names be case-insensitive (or always lower case)

.fc vs .lc

# TODO: .elems > 0

Add Types

Trim known field types

Tell user to always check the title and abstract as they are free form and
there is little we can do to detect errors (let alone fix errors)

Foo.new(bar) =>? Foo(bar)
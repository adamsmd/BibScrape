Flags
  flags for lists
  @url flag instead of $url
  --input where *.IO.f
  --names where *.IO.f
  --nouns where *.IO.f
  %field
  %no-encode
  %no-collapse
  %omit
  %omit-empty
  comma or no comma after last field

  Case-insensitive nouns?

Key generation:
  keep vs generate
  doi in key option
  use first n (non-trivial) words
  Format: author/editor1.last year title/journal.abbriv

Titlecase After colon in title?
  Warn if not?

follow jstor links to original publisher
add abstract to jstor
get PDF (eprint?)

# Omit:class/type
# Include:class/type
# no issn, no isbn

Bibtex
  warn if not exists bib_scrape_url when rescraping and fallback to doi

# TODO: make debug be verbose and go to STDERR

Tests
  a test that has a jr part
  a test that has 'others' in author names

Code
  parse names in Raku instead of Python
  Better cleanup of child processes
  Better way to put Inline::Python last (phasor?)
  == vs eq
  has Array[BibTeX::Name] @.names;

Automate cleaning of Isbn file

# TODO: ignore non-domain files (timeout on file load?)

$web-driver.set_page_load_timeout(5);

Publishers
  https://dblp.org/db/journals/publ/
  all ciated by papers in big four
  arxiv

  # TODO: remove all 'die' and warn instead
  # TODO: mktemp
Move downloads into own module? (or just a function in Scrape)

# TODO: numeric ranges might misfire if "-" doesn't represent a range, Common for tech report numbers


#     my $str = $entry->print_s();
#     $str ~~ s[(})(\s*}\s*)$][$0,$1] if $self->final_comma;
#     $str ~~ s[(}\s*),(\s*}\s*)$][$0$1] if !$self->final_comma;


Isbn -> ISBN

XPath

EISSN from side pill of ACM

META6.json

use 'is copy' on parameters

Invisible browser (with flag (verbose?) to make visible)

Code coverage

non-multi arrays

load browser as under-window

newx

List => Array[Int]

Make field names be case-insensitive (or always lower case)

.fc vs .lc

# TODO: .elems > 0

Add Types

Trim known field types

Tell user to always check the title and abstract as they are free form and
there is little we can do to detect errors (let alone fix errors)

Foo.new(bar) =>? Foo(bar)
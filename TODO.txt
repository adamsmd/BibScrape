# Flags

flags for lists
@url flag instead of $url
--input where *.IO.f
--names where *.IO.f
--nouns where *.IO.f
%field
%no-encode
%no-collapse
%omit
%omit-empty
comma or no comma after last field
headless
Case-insensitive nouns?
Omit:class/type
Include:class/type
no issn, no isbn

debug?

# Key generation:

keep vs generate
doi in key option
use first n (non-trivial) words
Format: author/editor1.last year title/journal.abbriv

# Output

Titlecase After colon in title?
  Warn if not?
follow jstor links to original publisher
add abstract to jstor
get PDF (eprint?)
EISSN from side pill of ACM
Trim known field types
warn if not exists bib_scrape_url when rescraping and fallback to doi

# Tests

a test that has a jr part
a test that has 'others' in author names

# Code

parse names in Raku instead of Python
Better cleanup of child processes
Better way to put Inline::Python last (phasor?)
== vs eq
remove all 'die' and warn instead
mktemp
Move downloads into own module? (or just a function in Scrape)
Automate cleaning of Isbn file
META6.json
Code coverage
non-multi arrays
newx
List => Array[Int]
Add Types

# WebDriver

ignore non-domain files (timeout on file load?)
$web-driver.set_page_load_timeout(5);
load browser as under-window

# Publishers

https://dblp.org/db/journals/publ/
all ciated by papers in big four
arxiv

# Other

numeric ranges might misfire if "-" doesn't represent a range, Common for tech report numbers

XPath

Tell user to always check the title and abstract as they are free form and
there is little we can do to detect errors (let alone fix errors)

# Unsorted

Files via file:<path> and bib_scrape_url doi or url